<Ui
	xmlns="http://www.blizzard.com/wow/ui/"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
    <Button name="DMinstrelButton" inherits="UIMenuButtonStretchTemplate" virtual="true">
        <Size x="140" y="32"/>
        <NormalFont style="GameFontHighlightLeft"/>
        <Anchors>
            <Anchor point="TOP" x="0" y="0"/>
        </Anchors>
        <Layers>
        	<Layer>
                <Texture parentKey="icon" file="Interface/GOSSIPFRAME/ChatBubbleGossipIcon" >
                    <Size x="28" y="28"/>
                    <Anchors>
                        <Anchor point="LEFT" relativePoint="LEFT" x="10" y="0"/>
                    </Anchors>
                </Texture>
                <FontString parentKey="Text" inherits="GameFontNormalMed1" justifyH="LEFT" justifyV="MIDDLE" wordwrap="true">
                    <Anchors>
                        <Anchor point="TOPLEFT" x="50" y="-2"/>
                        <Anchor point="BOTTOMRIGHT" x="-5" y="2"/>
                    </Anchors>
                </FontString>
        	</Layer>
        </Layers>

		<HighlightTexture file="Interface\Buttons\UI-Silver-Button-Highlight" alphaMode="ADD">
            <Anchors>
                <Anchor point="TOPLEFT" x="30" y="3"/>
                <Anchor point="BOTTOMRIGHT" x="10" y="-3"/>
            </Anchors>
			<TexCoords left="0" right="1.0" top="0.03" bottom="0.7175"/>
		</HighlightTexture>
    </Button>

    <Button name="DMinstrelButtonCommands" inherits="DMinstrelButton" virtual="true">
        <Size x="140" y="32"/>
        <NormalFont style="GameFontHighlightLeft"/>
        <Scripts>
            <OnLoad>
                self.Text:SetText(DMinstrel.Commands[tonumber(self:GetID())][1]);
            </OnLoad>
            <OnClick>
                DMinstrel:SendMinstrelMessage(DMinstrel.Commands[tonumber(self:GetID())][2]);
            </OnClick>
            <OnEnter>
                GameTooltip:SetOwner(self, "ANCHOR_CURSOR");
                GameTooltip:AddLine(DMinstrel.Commands[tonumber(self:GetID())][1]);
                GameTooltip:AddLine(" ");
                GameTooltip:AddLine(DMinstrel.Commands[tonumber(self:GetID())][2], 1,1,1, true);
                GameTooltip:Show();
            </OnEnter>
            <OnLeave>
                GameTooltip:Hide();
            </OnLeave>
        </Scripts>
    </Button>

    <Button name="DMinstrelButtonNPC" inherits="DMinstrelButton" virtual="true">
        <Size x="140" y="32"/>
        <NormalFont style="GameFontHighlightLeft"/>
        <Scripts>
            <OnLoad>
                self.Text:SetText(DMinstrel.NPC[tonumber(self:GetID())][1]);
            </OnLoad>
            <OnClick>
                DMinstrel:SendMinstrelMessage(DMinstrel.NPC[tonumber(self:GetID())][2]);
            </OnClick>
            <OnEnter>
                GameTooltip:SetOwner(self, "ANCHOR_CURSOR");
                GameTooltip:AddLine(DMinstrel.NPC[tonumber(self:GetID())][1]);
                GameTooltip:AddLine(" ");
                GameTooltip:AddLine(DMinstrel.NPC[tonumber(self:GetID())][2], 1,1,1, true);
                GameTooltip:Show();
            </OnEnter>
            <OnLeave>
                GameTooltip:Hide();
            </OnLeave>
        </Scripts>
    </Button>

    <Button name="DMinstrelButtonGObject" inherits="DMinstrelButton" virtual="true">
        <Size x="140" y="32"/>
        <NormalFont style="GameFontHighlightLeft"/>
        <Scripts>
            <OnLoad>
                self.Text:SetText(DMinstrel.GObject[tonumber(self:GetID())][1]);
            </OnLoad>
            <OnClick>
                DMinstrel:SendMinstrelMessage(DMinstrel.GObject[tonumber(self:GetID())][2]);
            </OnClick>
            <OnEnter>
                GameTooltip:SetOwner(self, "ANCHOR_CURSOR");
                GameTooltip:AddLine(DMinstrel.GObject[tonumber(self:GetID())][1]);
                GameTooltip:AddLine(" ");
                GameTooltip:AddLine(DMinstrel.GObject[tonumber(self:GetID())][2], 1,1,1, true);
                GameTooltip:Show();
            </OnEnter>
            <OnLeave>
                GameTooltip:Hide();
            </OnLeave>
        </Scripts>
    </Button>

    <Button name="DMinstrelMacrosButton" virtual="true">
        <Size x="30" y="30"/>
        <NormalTexture atlas="BfAMission-Icon-HUB"/>
        <PushedTexture atlas="BfAMission-Icon-HUB">
            <Size x="30" y="30"/>
            <Anchors>
                <Anchor point="CENTER">
                    <Offset>
                        <AbsDimension x="-1" y="-1"/>
                    </Offset>
                </Anchor>
            </Anchors>
        </PushedTexture>
        <HighlightTexture atlas="BossBanner-RedFlash" alphaMode="ADD"/>
        <Scripts>
            <OnLoad>
                self:RegisterForClicks("LeftButtonUp", "RightButtonDown");
            </OnLoad>
            <OnEnter>
                GameTooltip:SetOwner(self, "ANCHOR_CURSOR");
                GameTooltip:AddLine("|cFFFFFFFFПерсональный макрос|r");

                if (DMinstrel.Macros[self:GetID()][2] == "") then
                    GameTooltip:AddLine(DMinstrel.Macros[tonumber(self:GetID())][1]);
                else
                    GameTooltip:AddLine(DMinstrel.Macros[tonumber(self:GetID())][2]);
                end
                GameTooltip:AddLine("ЛКМ — Применить.");
                GameTooltip:AddLine("ПКМ — Редактировать.");
                GameTooltip:Show();
            </OnEnter>
            <OnLeave>
                GameTooltip:Hide();
            </OnLeave>
            <OnClick>
                if (button == "LeftButton") then
                    DMinstrel.ActiveMacros = tonumber(self:GetID());
                    if (DMinstrel.Macros[DMinstrel.ActiveMacros][2] == "") then
                        SendChatMessage(DMinstrel.Macros[DMinstrel.ActiveMacros][1], "WHISPER", "Common", UnitName("player"));
                    else
                        SendChatMessage(DMinstrel.Macros[DMinstrel.ActiveMacros][2], "WHISPER", "Common", UnitName("player"));
                    end
                else
                    if (DMinstrel.ActiveMacros == tonumber(self:GetID()) and DMinstrelMacrosEdit:IsShown()) then
                        DMinstrelMacrosEdit:Hide();
                    else
                        DMinstrel.ActiveMacros = tonumber(self:GetID());
                        DMinstrelMacrosEdit:Show();
                        if (DMinstrel.Macros[DMinstrel.ActiveMacros][2] == "") then
                            _G["DMinstrelMacrosEditContentTextMacrosScrollText"]:SetText(DMinstrel.Macros[DMinstrel.ActiveMacros][1]);
                        else
                            _G["DMinstrelMacrosEditContentTextMacrosScrollText"]:SetText(DMinstrel.Macros[DMinstrel.ActiveMacros][2]);
                        end
                    end
                end
            </OnClick>
        </Scripts>
    </Button>

    <Frame name="MIN_TextAreaBase" virtual="true" enableMouse="true">
        <Frames>
            <ScrollFrame parentKey="scroll" name="$parentScroll" inherits="UIPanelScrollFrameTemplate">
                <Anchors>
                    <Anchor point="TOP" x="0" y="-8"/>
                    <Anchor point="BOTTOM" x="0" y="2"/>
                    <Anchor point="LEFT" x="15" y="0"/>
                    <Anchor point="RIGHT" x="-25" y="0"/>
                </Anchors>
                <ScrollChild>
                    <EditBox name="$parentText" parentKey="text" multiLine="true" enableMouse="false" autoFocus="false">
                        <Anchors>
                            <Anchor point="TOPLEFT" x="0" y="-4"/>
                            <Anchor point="BOTTOMRIGHT" x="0" y="12"/>
                        </Anchors>
                        <Scripts>
                            <OnShow>
                                self:SetWidth(self:GetParent():GetParent():GetWidth() - 40);
                            </OnShow>
                            <OnTextChanged>
                                if self:IsVisible() and self:GetCursorPosition() == string.len(self:GetText()) then
                                    self:GetParent():SetVerticalScroll(self:GetParent():GetVerticalScrollRange());
                                end
                            </OnTextChanged>
                            <OnEnterPressed>
                                self:ClearFocus();
                            </OnEnterPressed>
                            <OnEscapePressed>
                                self:ClearFocus();
                            </OnEscapePressed>
                            <OnEditFocusGained>
                                self:HighlightText();
                                self:GetParent():GetParent().dummy:Hide();
                            </OnEditFocusGained>
                            <OnEditFocusLost>
                                DMinstrel.Macros[DMinstrel.ActiveMacros][2] = self:GetText();
                                self:HighlightText(0,0);
                                self:GetParent():GetParent().dummy:Show();
                            </OnEditFocusLost>
                        </Scripts>
                        <FontString inherits="ChatFontNormal"/>
                    </EditBox>
                </ScrollChild>
            </ScrollFrame>
            <Button name="$parentFocusDummy" parentKey="dummy">
                <Anchors>
                    <Anchor point="TOP" x="0" y="5"/>
                    <Anchor point="BOTTOM" x="0" y="-5"/>
                    <Anchor point="LEFT" x="0" y="0"/>
                    <Anchor point="RIGHT" x="-10" y="0"/>
                </Anchors>
                <Scripts>
                    <OnClick>
                        self:GetParent().scroll.text:SetFocus();
                    </OnClick>
                </Scripts>
            </Button>
        </Frames>
    </Frame>

    <Frame name="MIN_TextArea" inherits="MIN_TextAreaBase" virtual="true" enableMouse="true">
        <Layers>
            <Layer level="BACKGROUND">
                <Texture file="Interface\DialogFrame\UI-DialogBox-Background" horizTile="true" vertTile="true">
                    <Anchors>
                        <Anchor point="TOPLEFT" relativePoint="TOPLEFT" x="3" y="-4"/>
                        <Anchor point="BOTTOMRIGHT" relativePoint="BOTTOMRIGHT" x="-5" y="2"/>
                    </Anchors>
                </Texture>
            </Layer>
            <Layer level="BORDER" textureSubLevel="1">
                <Texture name="$parentInsetBotLeftCorner" inherits="UI-Frame-InnerBotLeftCorner" parentKey="InsetBorderBottomLeft">
                    <Anchors>
                        <Anchor point="BOTTOMLEFT" x="2" y="0"/>
                    </Anchors>
                </Texture>
                <Texture name="$parentInsetBotRightCorner" inherits="UI-Frame-InnerBotRight" parentKey="InsetBorderBottomRight">
                    <Anchors>
                        <Anchor point="BOTTOMRIGHT" x="-3" y="0"/>
                    </Anchors>
                </Texture>
                <Texture name="$parentInsetTopLeftCorner" inherits="UI-Frame-InnerTopLeft" parentKey="InsetBorderTopLeft">
                    <Anchors>
                        <Anchor point="TOPLEFT" x="2" y="-3"/>
                    </Anchors>
                </Texture>
                <Texture name="$parentInsetTopRightCorner" inherits="UI-Frame-InnerTopRight" parentKey="InsetBorderTopmRight">
                    <Anchors>
                        <Anchor point="TOPRIGHT" x="-3" y="-3"/>
                    </Anchors>
                </Texture>
            </Layer>
            <Layer level="BORDER">
                <Texture name="$parentInsetBottomBorder" inherits="_UI-Frame-InnerBotTile" parentKey="InsetBorderBottom">
                    <Anchors>
                        <Anchor point="BOTTOMLEFT" relativeKey="$parent.InsetBorderBottomLeft" relativePoint="BOTTOMRIGHT"/>
                        <Anchor point="BOTTOMRIGHT" relativeKey="$parent.InsetBorderBottomRight" relativePoint="BOTTOMLEFT"/>
                    </Anchors>
                </Texture>

                <Texture name="$parentInsetLeftBorder" inherits="!UI-Frame-InnerLeftTile" parentKey="InsetBorderLeft">
                    <Anchors>
                        <Anchor point="TOPLEFT" x="2" y="-3"/>
                        <Anchor point="BOTTOMLEFT" relativeKey="$parent.InsetBorderBottomLeft" relativePoint="TOPLEFT"/>
                    </Anchors>
                </Texture>
                <Texture name="$parentInsetRightBorder" inherits="!UI-Frame-InnerRightTile" parentKey="InsetBorderRight">
                    <Anchors>
                        <Anchor point="TOPRIGHT" x="-3" y="-3"/>
                        <Anchor point="BOTTOMRIGHT" relativeKey="$parent.InsetBorderBottomRight" relativePoint="TOPRIGHT"/>
                    </Anchors>
                </Texture>
                <Texture name="$parentInsetTopBorder" inherits="_UI-Frame-InnerTopTile" parentKey="InsetBorderBottom">
                    <Anchors>
                        <Anchor point="TOPLEFT" relativeKey="$parent.InsetBorderLeft" relativePoint="TOPLEFT"/>
                        <Anchor point="TOPRIGHT" relativeKey="$parent.InsetBorderRight" relativePoint="TOPRIGHT"/>
                    </Anchors>
                </Texture>
            </Layer>
        </Layers>
    </Frame>

</Ui>